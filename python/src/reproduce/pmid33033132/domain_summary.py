#!/usr/local/bin/python2.7
# encoding: utf-8
'''
Read the CSV file generated by blast_n_query and count the number of times each domain is found in a sample.

@author:     jpleyte

@copyright:  2023 Jay Pleyte. All rights reserved.

@license:    GNU GENERAL PUBLIC LICENSE v3

@deffield    updated: Updated
'''

import sys
from argparse import RawDescriptionHelpFormatter, ArgumentParser, FileType
import logging

__version__ = 0.1

class DomainSummary(object):
    '''
    '''
    def __init__(self):
        '''
        '''
        self.logger = logging.getLogger(__name__)        

    def read(self, in_file):
        '''
        '''        
        self.logger.info(f"Reading {in_file}")
    
    def count_domains(self):
        '''
        '''
        self.logger.info(f"Counting")
    
    def write(self, out_file):
        '''
        '''
        self.logger.info(f"Writing {out_file}")

def _main(): 
    '''Parse command line options.'''   
    logger = logging.getLogger()
    streamHandler = logging.StreamHandler(sys.stdout)
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    streamHandler.setFormatter(formatter)
    logger.addHandler(streamHandler)
    logger.setLevel(logging.DEBUG)
     
    parser = ArgumentParser(description='', formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument("-i", "--in_file", help="Input CSV that was generated by blast_n_query.py", type=FileType('r'), required=True)
    parser.add_argument("-o", "--out_file", help="Output CSV with summary of domain counts", type=FileType('w'), required=True)
    parser.add_argument('-V', '--version', action='version', version=__version__)
    args = parser.parse_args()

    summary = DomainSummary()
    summary.read(args.in_file)
    summary.count_domains()
    summary.write(args.out_file)    
     
if __name__ == "__main__":
    sys.exit(_main())